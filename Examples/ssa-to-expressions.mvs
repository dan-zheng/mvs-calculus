var p: Float = 2.0 in
p

// environment: { %0 -> FloatExpr(2) }

// Visiting line by line:
// func @main() -> () {

//   %0 = 2.0: Float
// environment: { %0 -> FloatExpr(2) }

//   %p = alloc Float
// environment: { %0 -> FloatExpr(2), p -> BindingExpr(dummy) }
//                                         let p = dummy

//   %p = %0: Float
// environment: { %0 -> FloatExpr(2), p -> BindingExpr(%0) }
//                                         let p = %0

//   return %p: Float
// environment: { %0 -> FloatExpr(2), p -> BindingExpr(%0) }
//                                         let p = %0 in p

// }


// Issues:
// - How to build returned expression using environment?
//   - Directly looking up returned value in the environment

// Ideas:
// - Create more let bindings for uniformity
